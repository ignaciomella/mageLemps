<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Magento\Framework\Escaper;

/** @var \Magento\Customer\Block\Account\Resetpassword $block */
/** @var Escaper $escaper */
?>
<div class="container mb-12">
    <div class="w-full md:w-1/2 card my-8">
        <form action="<?= $escaper->escapeUrl(
            $block->getUrl(
                '*/*/resetpasswordpost',
                ['_query' => ['id' => $block->getRpCustomerId(), 'token' => $block->getResetPasswordLinkToken()]]
            )
        ) ?>"
              x-data="initForm()"
              x-on:submit="return checkPasswordsMatch()"
              method="post"
            <?php if ($block->isAutocompleteDisabled()): ?> autocomplete="off"<?php endif; ?>
              id="form-validate"
              class="form password reset">
            <fieldset class="fieldset">
                <?= $block->getBlockHtml('formkey'); ?>
                <div class="field">
                    <label class="label" for="password"><span><?= $escaper->escapeHtml(
                        __('New Password')
                    ) ?></span></label>
                    <div class="control">
                        <?php $minimumPasswordLength = $block->getMinimumPasswordLength() ?>
                        <input type="password" class="form-input" name="password" id="password" required
                               x-on:change="checkPasswordsMatch()"
                               minlength="<?= $escaper->escapeHtmlAttr($minimumPasswordLength) ?>" autocomplete="off"/>
                    </div>
                    <p class="text-sm text-secondary mt-3"><?= $escaper->escapeHtml(
                        __(
                            'Minimum of different classes of characters in password is %1.'
                                . ' Classes of characters: Lower Case, Upper Case, Digits, Special Characters.',
                            $block->getRequiredCharacterClassesNumber()
                        )
                    ) ?></p>
                </div>
                    <div class="field">
                        <label class="label" for="password-confirmation">
                            <span><?= $escaper->escapeHtml(__('Confirm New Password')) ?></span>
                        </label>
                        <div class="control">
                            <input type="password" class="form-input" name="password_confirmation"
                                   id="password-confirmation"
                                   x-on:change="checkPasswordsMatch()"
                                   autocomplete="off"/>
                        </div>
                    </div>
                <p class="my-4 text-red" :class="passwordsMatching ? 'invisible' : 'visible'">
                    <?= $escaper->escapeHtml(__('Your password confirmation must match your password.')) ?>
                </p>
            </fieldset>
            <div class="actions-toolbar">
                <div class="primary">
                    <button type="submit" class="action submit primary"><span><?= $escaper->escapeHtml(
                        __('Set a New Password')
                    ) ?></span></button>
                </div>
            </div>
        </form>
    </div>
</div>
<script>
    function initForm() {
        return {
            passwordsMatching: true,
            checkPasswordsMatch() {
                if (document.getElementById('password').value ===
                        document.getElementById('password-confirmation').value) {
                            this.passwordsMatching = true;
                            return true;
                        }
                this.passwordsMatching = false;
                return false;
            }
        }
    }
</script>
